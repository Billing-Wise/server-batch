plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.7'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.google.cloud.tools.jib' version '3.4.3'
	id 'org.sonarqube' version '4.4.1.3373'
	id 'jacoco'
}

group = 'site.billingwise.batch'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'net.nurigo:sdk:4.3.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine'
	testImplementation 'org.mockito:mockito-junit-jupiter'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

ext {
	set('springCloudVersion', "2023.0.2")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


tasks.named('test') {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required.set(true)
	}
}

jib {
	from {
		image = "eclipse-temurin:17-jdk"
	}
	to {
		image = "891376922202.dkr.ecr.ap-northeast-2.amazonaws.com/t5-batch-ecr"
		tags = ["${project.version}".toString()]
		credHelper = 'ecr-login'
	}
	container {
		creationTime = "USE_CURRENT_TIMESTAMP"
		jvmFlags = ['-Dspring.profiles.active=prod', '-XX:+UseContainerSupport', '-Dserver.port=9090', '-Dfile.encoding=UTF-8', '-Duser.timezone=Asia/Seoul']
		ports = ['9090']
	}
}

sonar {
	properties {
		property "sonar.projectKey", "Billing-Wise_sever-batch"
		property "sonar.organization", "billing-wise"
		property "sonar.host.url", "https://sonarcloud.io"
		property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
	}
}
